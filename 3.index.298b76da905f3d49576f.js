(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{ZvhZ:function(e,a,t){"use strict";t.d(a,"b",function(){return d}),t.d(a,"d",function(){return u}),t.d(a,"f",function(){return m}),t.d(a,"e",function(){return p}),t.d(a,"a",function(){return h}),t.d(a,"c",function(){return y});var n=t("zr5I"),r=t.n(n),s=t("iho4");function l(e){return function(){var a=e.apply(this,arguments);return new Promise(function(e,t){return function n(r,s){try{var l=a[r](s),i=l.value}catch(e){return void t(e)}if(!l.done)return Promise.resolve(i).then(function(e){n("next",e)},function(e){n("throw",e)});e(i)}("next")})}}const i=localStorage.getItem("key"),c=()=>(()=>{var e=l(function*(e){e({type:"DATA_REQUEST"})});return function(a){return e.apply(this,arguments)}})(),o=e=>a=>{a({type:"ERROR",payload:e})},d=e=>a=>{a(c());const t={x:"1",key:`${i}`},n=Object.assign({},t,e);r.a.post(`${s.API}:acl:user`,n).then(e=>{"200"===e.data.r?a({type:"LIST_USER",payload:e.data.atom,filParam:n}):"401"===e.data.r&&a({type:"ERROR"})})},u=e=>a=>{a(c());const t={x:"101",id:"0",key:`${i}`,Name:e.Name,Description:e.Description,BranchID:e.BranchID,SalesID:e.SalesID,Active:"A"};r.a.post(`${s.API}:acl:user`,t).then(e=>{"200"===e.data.r?a({type:"SAVE_USER",payload:e.data}):"401"===e.data.r&&a(o(e.data.m))})},m=(e,a)=>t=>{t(c());const n={x:"101",id:e,key:`${i}`,Name:a.Name,Description:a.Description,BranchID:a.BranchID,SalesID:a.SalesID,Active:"A"};r.a.post(`${s.API}:acl:user`,n).then(e=>{"200"===e.data.r?t({type:"UPDATE_USER",payload:e.data}):"401"===e.data.r&&t(o(e.data.m))})},p=e=>(()=>{var a=l(function*(a){a(c());const t={x:"50",id:e,key:`${i}`};yield r.a.post(`${s.API}:acl:user`,t).then(function(e){"200"===e.data.r?a({type:"SHOW_USER",payload:e.data.atom.data}):"401"===e.data.r&&a(o(e.data.m))})});return function(e){return a.apply(this,arguments)}})(),h=e=>a=>{a(c());const t={x:"201",id:e,key:`${i}`};r.a.post(`${s.API}:acl:user`,t).then(e=>{"200"===e.data.r?a({type:"DELETE_USER",payload:e.data}):"401"===e.data.r&&a(o(e.data.m))})},y=()=>e=>{r.a.post(`${s.API}:acl:group`,{x:"1",key:`${i}`}).then(a=>{"200"===a.data.r&&e({type:"LIST_USER_GROUP",payload:a.data.atom.data})})}},knzv:function(e,a,t){"use strict";t.r(a);var n=t("cDcd"),r=t.n(n),s=t("h74D"),l=t("17x9"),i=t.n(l),c=t("je4i"),o=t.n(c),d=t("Vl3Y"),u=t("2fM7"),m=t("kLXV"),p=t("2/Rp"),h=t("BMrR"),y=t("kPKH"),g=t("5rEg"),D=t("ZvhZ"),E=t("7cg7"),f=t("T2ns"),b=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e};const I=d.a.Item,k=u.a.Option,v=d.a.create()(e=>{const{modalVisible:a,handleModalVisible:t,formValues:n,formTitle:s,handleCreate:l,form:i,branch:c}=e,d=c.listData;return r.a.createElement(m.a,{visible:a,footer:[r.a.createElement(p.a,{key:"submit",htmlType:"submit",type:"primary",onClick:()=>{i.validateFields((e,a)=>{e||(i.resetFields(),l(a))})}},"Submit")],title:[r.a.createElement("span",{key:o.a.generate()},r.a.createElement("h3",{className:"header-title mb-0"},`${s} UNIT`),r.a.createElement("small",{className:"small-3 header-title"},"Silahkan isi data yang sesuai"))],onCancel:()=>t()},r.a.createElement(h.a,{gutter:25},r.a.createElement(y.a,{span:12},r.a.createElement(I,{label:"Name"},i.getFieldDecorator("Name",{rules:[{required:!0,message:"Please input your name!"}],initialValue:n.name||""})(r.a.createElement(g.a,{className:"form-control",size:"large",placeholder:"Name"})))),r.a.createElement(y.a,{span:12},r.a.createElement(I,{label:"Email"},i.getFieldDecorator("Email",{rules:[{required:!0,message:"Please input your email!"}],initialValue:n.email||""})(r.a.createElement(g.a,{className:"form-control",size:"large",placeholder:"Email"}))))),r.a.createElement(h.a,{gutter:25},r.a.createElement(y.a,{span:25},r.a.createElement(I,{label:"Description"},i.getFieldDecorator("Description",{rules:[{required:!0,message:"Please input your description!"}]})(r.a.createElement(g.a,{className:"form-control",size:"large",placeholder:"Description"}))))),r.a.createElement(h.a,{gutter:25},r.a.createElement(y.a,{span:12},r.a.createElement(I,{label:"Brach"},i.getFieldDecorator("BranchID",{rules:[{required:!0,message:"Please input your brach!"}]})(r.a.createElement(u.a,{size:"large",placeholder:"Choose Branch",className:"w-100"},d.length>0&&d.map(e=>r.a.createElement(k,{key:o.a.generate(),value:e[0]},e[2])))))),r.a.createElement(y.a,{span:12},r.a.createElement(I,{label:"Password"},i.getFieldDecorator("Password",{rules:[{required:!0,message:"Please input your password!"}]})(r.a.createElement(g.a,{type:"password",className:"form-control",size:"large",placeholder:"******"}))))))});class R extends n.Component{constructor(e){super(e),this.componentDidMount=(()=>{this.props.listBranch()}),this.state={}}render(){return r.a.createElement(v,b({},this.props,this.state))}}R.columns=[{title:"Name",dataIndex:"name",key:"name",sorter:(e,a)=>e.name.length-a.name.length,sortDirections:["descend","ascend"]},{title:"Email",dataIndex:"email",key:"email",sorter:(e,a)=>e.name.length-a.name.length,sortDirections:["descend","ascend"]},{title:"Branch",dataIndex:"branch",key:"branch",sorter:(e,a)=>e.name.length-a.name.length,sortDirections:["descend","ascend"]},{title:"Group",dataIndex:"group",key:"group",sorter:(e,a)=>e.name.length-a.name.length,sortDirections:["descend","ascend"]},{title:"Status",dataIndex:"status",key:"status",sorter:(e,a)=>e.name.length-a.name.length,sortDirections:["descend","ascend"]},{title:"Desc",dataIndex:"description",key:"description",sorter:(e,a)=>e.name.length-a.name.length,sortDirections:["descend","ascend"]}],R.dataTable=(e=>{const a=[];return e.length>0&&e.map(e=>a.push({key:e[0],name:e[1],email:"suchronrizal@gmail.com",branch:e[5],group:e[7],status:"A"===e[8]?"Active":"Non Active",description:e[2]})),a}),R.propTypes={listData:i.a.func.isRequired,saveData:i.a.func.isRequired,showData:i.a.func.isRequired,updateData:i.a.func.isRequired,deleteData:i.a.func.isRequired,listBranch:i.a.objectOf(i.a.any).isRequired};a.default=Object(s.connect)(({user:e,branch:a})=>({data:e,branch:a}),{listBranch:E.b,listData:D.b,saveData:D.d,showData:D.e,updateData:D.f,deleteData:D.a})(Object(f.a)({columns:R.columns,dataTable:R.dataTable,headTitle:"User Management"})(R))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,