(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{ZvhZ:function(e,t,a){"use strict";a.d(t,"a",function(){return o}),a.d(t,"b",function(){return c});var n=a("zr5I"),r=a.n(n),s=a("iho4");const l=localStorage.getItem("key"),o=()=>e=>{r.a.post(`${s.API}:acl:user`,{x:"1",key:`${l}`}).then(t=>{"200"===t.data[0].r?e({type:"LIST_USER",payload:t.data[0].atom.data}):"401"===t.data[0].r&&e({type:"ERROR"})})},c=()=>e=>{r.a.post(`${s.API}:acl:group`,{x:"1",key:`${l}`}).then(t=>{"200"===t.data.r&&e({type:"LIST_USER_GROUP",payload:t.data.atom.data})})}},iHEJ:function(e,t,a){"use strict";a.r(t);var n=a("cDcd"),r=a.n(n),s=a("h74D"),l=a("17x9"),o=a.n(l),c=a("je4i"),i=a.n(c),m=a("5rEg"),p=a("2fM7"),d=a("CtXQ"),u=a("2/Rp"),h=a("wCAj"),E=a("kLXV"),v=a("Vl3Y");class g extends n.Component{constructor(e){super(e),this.state={}}render(){const{getFieldDecorator:e}=this.props.form;return r.a.createElement(r.a.Fragment,null,r.a.createElement(v.a,{className:"input-round",onSubmit:this.handleUserGroup},r.a.createElement(v.a.Item,{label:"Name"},e("name",{rules:[{required:!0,message:"Please input your name!"}]})(r.a.createElement(m.a,{className:"form-control",size:"large",placeholder:"Name"}))),r.a.createElement(v.a.Item,{label:"Description"},e("desc",{rules:[{required:!0,message:"Please input your description!"}]})(r.a.createElement(m.a,{className:"form-control",size:"large",placeholder:"Description"})))))}}g.propTypes={form:o.a.objectOf(o.a.any).isRequired};var y=v.a.create({name:"userGroup_form"})(g),b=a("ZvhZ"),N=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e};const f=m.a.Search,w=p.a.Option,S=[{title:"Name",dataIndex:"name",key:"name",sorter:(e,t)=>e.name.length-t.name.length,sortDirections:["descend","ascend"]},{title:"Desc",dataIndex:"description",key:"description",sorter:(e,t)=>e.name.length-t.name.length,sortDirections:["descend","ascend"]},{title:"Status",dataIndex:"status",key:"status",sorter:(e,t)=>e.name.length-t.name.length,sortDirections:["descend","ascend"]},{title:"Action",key:"action",render:(e,t)=>r.a.createElement("div",{className:"gap-xy"},r.a.createElement("button",{type:"button",className:"btn btn-circle btn-xs btn-outline-light"},r.a.createElement(d.a,{type:"eye",style:{fontSize:"16px",color:"#FFF"},theme:"outlined"})),r.a.createElement("button",{type:"button",className:"btn btn-circle btn-xs btn-light"},r.a.createElement(d.a,{type:"edit",style:{fontSize:"16px"},theme:"outlined"})))}];class O extends n.Component{constructor(e){super(e),this.componentDidMount=(()=>{this.props.listUserGroup()}),this.showModal=(()=>{this.setState({visible:!0})}),this.handleCancel=(()=>{this.setState({visible:!1})}),this.state={loading:!1,visible:!1}}render(){const{listUserGroup:e}=this.props.user,t=[];e.length>0&&e.map(e=>t.push({key:i.a.generate(),name:e[1],description:e[2],status:"A"===e[3]?"Active":"Non Active"}));const{loading:a,visible:n}=this.state;return r.a.createElement(r.a.Fragment,null,r.a.createElement("h5",{className:"font-weight-700 sub-title"},"USER GROUP"),r.a.createElement("div",{className:"row"},r.a.createElement("div",{className:"col-md-12"},r.a.createElement("div",{className:"table-operations"},r.a.createElement("div",{className:"row no-gutters input-glass"},r.a.createElement("div",{className:"col-1 mr-3"},r.a.createElement(p.a,{showSearch:!0,className:"w-100",placeholder:"Status",optionFilterProp:"children",filterOption:(e,t)=>t.props.children.toLowerCase().indexOf(e.toLowerCase())>=0},r.a.createElement(w,{value:"1"},"Active"),r.a.createElement(w,{value:"2"},"Non Active"))),r.a.createElement("div",{className:"col-1 mr-3"},r.a.createElement(p.a,{showSearch:!0,className:"w-100",placeholder:"Branch",optionFilterProp:"children",filterOption:(e,t)=>t.props.children.toLowerCase().indexOf(e.toLowerCase())>=0},r.a.createElement(w,{value:"1"},"Active"),r.a.createElement(w,{value:"2"},"Non Active"))),r.a.createElement("div",{className:"col-1 mr-3"},r.a.createElement(p.a,{showSearch:!0,className:"w-100",placeholder:"Group",optionFilterProp:"children",filterOption:(e,t)=>t.props.children.toLowerCase().indexOf(e.toLowerCase())>=0},r.a.createElement(w,{value:"1"},"Active"),r.a.createElement(w,{value:"2"},"Non Active"))),r.a.createElement("div",{className:"col-2 mr-3"},r.a.createElement(f,{placeholder:"input search text",onSearch:e=>console.log(e),className:"w-100"})),r.a.createElement("div",{className:"col-1 mr-3"},r.a.createElement(u.a,{type:"primary",shape:"round",icon:"plus",onClick:this.showModal},"Create New")))),r.a.createElement("div",{className:"py-3"},r.a.createElement(h.a,N({},this.state,{pagination:{position:"top",defaultPageSize:10,pageSizeOptions:["20","50","100"],showSizeChanger:!0},columns:S,dataSource:t})))),r.a.createElement(E.a,{visible:n,title:[r.a.createElement("span",null,r.a.createElement("h3",{className:"header-title mb-0"},"CREATE NEW USER"),r.a.createElement("small",{className:"small-3"},"Silahkan isi data yang sesuai"))],onOk:this.handleOk,onCancel:this.handleCancel,footer:[r.a.createElement(u.a,{key:"submit",type:"primary",loading:a,onClick:this.handleOk},"Submit")]},r.a.createElement(y,null))))}}O.propTypes={user:o.a.objectOf(o.a.any).isRequired,listUserGroup:o.a.func.isRequired};t.default=Object(s.connect)(({user:e})=>({user:e}),{listUserGroup:b.b})(O)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,