(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{ZvhZ:function(e,t,a){"use strict";a.d(t,"b",function(){return d}),a.d(t,"d",function(){return m}),a.d(t,"f",function(){return p}),a.d(t,"e",function(){return u}),a.d(t,"a",function(){return h}),a.d(t,"c",function(){return E});var n=a("zr5I"),r=a.n(n),s=a("iho4");function o(e){return function(){var t=e.apply(this,arguments);return new Promise(function(e,a){return function n(r,s){try{var o=t[r](s),l=o.value}catch(e){return void a(e)}if(!o.done)return Promise.resolve(l).then(function(e){n("next",e)},function(e){n("throw",e)});e(l)}("next")})}}const l=localStorage.getItem("key"),c=()=>(()=>{var e=o(function*(e){e({type:"DATA_REQUEST"})});return function(t){return e.apply(this,arguments)}})(),i=e=>t=>{t({type:"ERROR",payload:e})},d=e=>t=>{t(c());const a={x:"1",key:`${l}`},n=Object.assign({},a,e);r.a.post(`${s.API}:acl:user`,n).then(e=>{"200"===e.data.r?t({type:"LIST_USER",payload:e.data.atom,filParam:n}):"401"===e.data.r&&t({type:"ERROR"})})},m=e=>t=>{t(c());const a={x:"101",id:"0",key:`${l}`,Name:e.Name,Description:e.Description,BranchID:e.BranchID,SalesID:e.SalesID,Active:"A"};r.a.post(`${s.API}:acl:user`,a).then(e=>{"200"===e.data.r?t({type:"SAVE_USER",payload:e.data}):"401"===e.data.r&&t(i(e.data.m))})},p=(e,t)=>a=>{a(c());const n={x:"101",id:e,key:`${l}`,Name:t.Name,Description:t.Description,BranchID:t.BranchID,SalesID:t.SalesID,Active:"A"};r.a.post(`${s.API}:acl:user`,n).then(e=>{"200"===e.data.r?a({type:"UPDATE_USER",payload:e.data}):"401"===e.data.r&&a(i(e.data.m))})},u=e=>(()=>{var t=o(function*(t){t(c());const a={x:"50",id:e,key:`${l}`};yield r.a.post(`${s.API}:acl:user`,a).then(function(e){"200"===e.data.r?t({type:"SHOW_USER",payload:e.data.atom.data}):"401"===e.data.r&&t(i(e.data.m))})});return function(e){return t.apply(this,arguments)}})(),h=e=>t=>{t(c());const a={x:"201",id:e,key:`${l}`};r.a.post(`${s.API}:acl:user`,a).then(e=>{"200"===e.data.r?t({type:"DELETE_USER",payload:e.data}):"401"===e.data.r&&t(i(e.data.m))})},E=()=>e=>{r.a.post(`${s.API}:acl:group`,{x:"1",key:`${l}`}).then(t=>{"200"===t.data.r&&e({type:"LIST_USER_GROUP",payload:t.data.atom.data})})}},iHEJ:function(e,t,a){"use strict";a.r(t);var n=a("cDcd"),r=a.n(n),s=a("h74D"),o=a("17x9"),l=a.n(o),c=a("je4i"),i=a.n(c),d=a("5rEg"),m=a("2fM7"),p=a("CtXQ"),u=a("2/Rp"),h=a("wCAj"),E=a("kLXV"),y=a("Vl3Y");class v extends n.Component{constructor(e){super(e),this.state={}}render(){const{getFieldDecorator:e}=this.props.form;return r.a.createElement(r.a.Fragment,null,r.a.createElement(y.a,{className:"input-round",onSubmit:this.handleUserGroup},r.a.createElement(y.a.Item,{label:"Name"},e("name",{rules:[{required:!0,message:"Please input your name!"}]})(r.a.createElement(d.a,{className:"form-control",size:"large",placeholder:"Name"}))),r.a.createElement(y.a.Item,{label:"Description"},e("desc",{rules:[{required:!0,message:"Please input your description!"}]})(r.a.createElement(d.a,{className:"form-control",size:"large",placeholder:"Description"})))))}}v.propTypes={form:l.a.objectOf(l.a.any).isRequired};var f=y.a.create({name:"userGroup_form"})(v),g=a("ZvhZ"),N=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e};const S=d.a.Search,b=m.a.Option,w=[{title:"Name",dataIndex:"name",key:"name",sorter:(e,t)=>e.name.length-t.name.length,sortDirections:["descend","ascend"]},{title:"Desc",dataIndex:"description",key:"description",sorter:(e,t)=>e.name.length-t.name.length,sortDirections:["descend","ascend"]},{title:"Status",dataIndex:"status",key:"status",sorter:(e,t)=>e.name.length-t.name.length,sortDirections:["descend","ascend"]},{title:"Action",key:"action",render:(e,t)=>r.a.createElement("div",{className:"gap-xy"},r.a.createElement("button",{type:"button",className:"btn btn-circle btn-xs btn-outline-light"},r.a.createElement(p.a,{type:"eye",style:{fontSize:"16px",color:"#FFF"},theme:"outlined"})),r.a.createElement("button",{type:"button",className:"btn btn-circle btn-xs btn-light"},r.a.createElement(p.a,{type:"edit",style:{fontSize:"16px"},theme:"outlined"})))}];class A extends n.Component{constructor(e){super(e),this.componentDidMount=(()=>{this.props.listUserGroup()}),this.showModal=(()=>{this.setState({visible:!0})}),this.handleCancel=(()=>{this.setState({visible:!1})}),this.state={loading:!1,visible:!1}}render(){const{listUserGroup:e}=this.props.user,t=[];e.length>0&&e.map(e=>t.push({key:i.a.generate(),name:e[1],description:e[2],status:"A"===e[3]?"Active":"Non Active"}));const{loading:a,visible:n}=this.state;return r.a.createElement(r.a.Fragment,null,r.a.createElement("h5",{className:"font-weight-700 sub-title"},"USER GROUP"),r.a.createElement("div",{className:"row"},r.a.createElement("div",{className:"col-md-12"},r.a.createElement("div",{className:"table-operations"},r.a.createElement("div",{className:"row no-gutters input-glass"},r.a.createElement("div",{className:"col-1 mr-3"},r.a.createElement(m.a,{showSearch:!0,className:"w-100",placeholder:"Status",optionFilterProp:"children",filterOption:(e,t)=>t.props.children.toLowerCase().indexOf(e.toLowerCase())>=0},r.a.createElement(b,{value:"1"},"Active"),r.a.createElement(b,{value:"2"},"Non Active"))),r.a.createElement("div",{className:"col-1 mr-3"},r.a.createElement(m.a,{showSearch:!0,className:"w-100",placeholder:"Branch",optionFilterProp:"children",filterOption:(e,t)=>t.props.children.toLowerCase().indexOf(e.toLowerCase())>=0},r.a.createElement(b,{value:"1"},"Active"),r.a.createElement(b,{value:"2"},"Non Active"))),r.a.createElement("div",{className:"col-1 mr-3"},r.a.createElement(m.a,{showSearch:!0,className:"w-100",placeholder:"Group",optionFilterProp:"children",filterOption:(e,t)=>t.props.children.toLowerCase().indexOf(e.toLowerCase())>=0},r.a.createElement(b,{value:"1"},"Active"),r.a.createElement(b,{value:"2"},"Non Active"))),r.a.createElement("div",{className:"col-2 mr-3"},r.a.createElement(S,{placeholder:"input search text",onSearch:e=>console.log(e),className:"w-100"})),r.a.createElement("div",{className:"col-1 mr-3"},r.a.createElement(u.a,{type:"primary",shape:"round",icon:"plus",onClick:this.showModal},"Create New")))),r.a.createElement("div",{className:"py-3"},r.a.createElement(h.a,N({},this.state,{pagination:{position:"top",defaultPageSize:10,pageSizeOptions:["20","50","100"],showSizeChanger:!0},columns:w,dataSource:t})))),r.a.createElement(E.a,{visible:n,title:[r.a.createElement("span",null,r.a.createElement("h3",{className:"header-title mb-0"},"CREATE NEW USER"),r.a.createElement("small",{className:"small-3"},"Silahkan isi data yang sesuai"))],onOk:this.handleOk,onCancel:this.handleCancel,footer:[r.a.createElement(u.a,{key:"submit",type:"primary",loading:a,onClick:this.handleOk},"Submit")]},r.a.createElement(f,null))))}}A.propTypes={user:l.a.objectOf(l.a.any).isRequired,listUserGroup:l.a.func.isRequired};t.default=Object(s.connect)(({user:e})=>({user:e}),{listUserGroup:g.c})(A)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,